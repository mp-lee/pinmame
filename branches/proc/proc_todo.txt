* makefile & src/p-roc/p-roc.mak:
  - Either P-ROC provides a MinGW package or all external pre-compiled stuff
    goes to ./p-roc (subfolder gcc for library)
  - CPPFLAGS += -std=gnu99?
  - Correct LDFLAGS and LIBS definition in p-roc.mak?
  - Find all CFLAGS changes and see if these should be added to CPPFLAGS too.

* src/wpc/core.c:
  - Use VPINMAME solution for g_fHandleKeyboard/g_fHandleMechanics generally?
    Values depend on "-proc" switch.
  - SEG16R array, why this difference?

* src/wpc/se.c
  - Create variables for SE_SOLSMOOTH, SE_LAMPSMOOTH, SE_DISPLAYSMOOTH
    Values depend on "-proc" switch.
  + Fixed lamps coding, memcpy/memset where inside "if (coreGlobals.p_rocEn)"

* src/wpc/wpc.c
  - coreGlobals.solenoids?
  - Create variables for SE_SOLSMOOTH, SE_LAMPSMOOTH, SE_DISPLAYSMOOTH
    Values depend on "-proc" switch.
  - Why wpc_m2sw() in wpc.h?

* "P-ROC" not "PROC"
* "-proc" switch to generally enable P-ROC support
* YAML file support ./p-roc folder (configurable via ini file)
* #ifdef P-ROC_SUPPORT correctly
* changed #define's go to a variable (so they can be set differently when "-proc" switch is set)
* move all of the P-ROC specific functions to p-roc/*.
  So it should be possible to remove the PRHandle from coreGlobals.
  Then we could get rid of library's pinproc.h in core.h.

  FYI - Looks like it should be safe to removed references to coreGlobals.proc.
  coreGlobals.p_rocEn should be used instead (and is used in most places).  Then
  pinproc.h can be removed from core.h.


* changed files
  + src\driver.h
  + src\wpc\dedmd.c
  + src\wpc\core.c
  + src\wpc\core.h
  + src\wpc\se.c
  + src\wpc\wpc.c
  - src\wpc\wpc.h
  + src\windows\config.c


* compilation of libpinproc:
  - General
    * http://www.pinballcontrollers.com/wiki/Windows_build_instructions
  - CMake
    * downloaded cmake-2.8.3-win32-x86.zip
    * extracted to D:\Programme\Coding\cmake\
    * added D:\Programme\Coding\cmake\bin\ to PATH
  - libpinproc source preparation
    * downloaded preble-libpinproc-3ffb3b6.tar.gz from dev branch (=3ffb3b6f5379bdde5ad35ce547461fb145df8b34; December 05, 2010)
    * extracted source to D:\Coding\libpinproc\
    * set LIBPINPROC=<libpinproc>
      Example: set LIBPINPROC=D:\Coding\libpinproc\
    * set INSTALLDIR=<temp dir>
      Example: set INSTALLDIR=E:\TEMP\
  - FTDI's ftd2xx.lib
    * downloaded "CDM20808.zip" from FTDI's D2XX [Direct] Drivers page at http://www.ftdichip.com/Drivers/D2XX.htm
    * extracted i386/ftd2xx.lib and /ftd2xx.h to %LIBPINPROC%/FTDI/lib and %LIBPINPROC%/FTDI/include
      (does not work with static/i386/ftd2xx.lib)
  - YAML-CPP
    * downloaded "yaml-cpp-0.2.5.tar.gz"
    * extracted to D:\Coding\yaml-cpp-0.2.5\
    * cd /d D:\Coding\yaml-cpp-0.2.5\
    * rmdir /s bin
    * mkdir bin
    * cd bin
    * CMakeLists.txt: change to SET (LIB_TYPE STATIC)
    * cmake -G "MinGW Makefiles" ..
    * mingw32-make (needs GCC 4 or later, doesn't compile with GCC 3.2.3)
    * cmake.exe -DCMAKE_INSTALL_PREFIX:PATH=%INSTALLDIR%\YAML_CPP -P cmake_install.cmake
      - or -
      cmake.exe -DCMAKE_INSTALL_PREFIX:PATH=%MINGW_PATH% -P cmake_install.cmake
      (Note: install dir can not be changed with mingw32-make install )
      copies lib/libyaml-cpp.a and include/yaml-cpp/*.h
  - libpinproc
    * cd /d %LIBPINPROC%
    * rmdir /s bin
    * mkdir bin
    * cd bin
    * set EXTRA_INC=..\FTDI\include
      set EXTRA_LINK=..\FTDI\lib
      (no quotes(!) and separate multiple pathes with semicolon)
    * cmake -G "MinGW Makefiles" ..
    * mingw32-make (needs GCC 4 or later, doesn't compile with GCC 3.2.3)
    * cmake.exe -DCMAKE_INSTALL_PREFIX:PATH=%INSTALLDIR%\LIBPINPROC -P cmake_install.cmake
      - or -
      cmake.exe -DCMAKE_INSTALL_PREFIX:PATH=%MINGW_PATH% -P cmake_install.cmake
      (Note: install dir can not be changed with mingw32-make install )
      copies lib/libpinproc.a and include/p-roc/pinproc.h

Wish list:
- MinGW makefile generation
  * cmake -DEXTRA_INC="..\FTDI\include" -DEXTRA_LINK="..\FTDI\lib" -G "MinGW Makefiles" ..
    No env var messing.
- Wiki page update
  At top of the wiki page I would state, that if the user doesn't want to change anything, that he has to create C:\usr\local\[bin,lib] and use them as indicated on that page.
  Otherwise he has to handle extra include and lib directories.
  EXTRA_INC and EXTRA_LIB can not contain directories in quotes. And multiple dirs have to be separated by semicolon.
  set EXTRA_INC="%LIBPINPROC%\FTDI\include" will result in "../"D:/Coding/libpinproc//FTDI/include""
  set EXTRA_LINK="%LIBPINPROC%\FTDI\lib" will result in generation error "Policy CMP0015 is not set" (cmake 2.8.3
  Also these settings take only effect on Makefile generation, not when building.
  The makefiles have to be re-generated when you switch MinGW versions.
- CMake enhancements:
  project (LIBPINPROC)
  include_directories(${LIBPINPROC_SOURCE_DIR}/include /usr/local/include $ENV{EXTRA_INC})
    Allows to use #include <pinproc.h> (not .../.../......)
    Maybe other Makefiles for Unix have to be changed too

* compilation issues:
  * src/wpc/mech.c (workaround remove -Werrror from CFLAGS for now)
In file included from src/wpc/core.h:8,
                 from src/wpc/mech.c:3:
p-roc/include/p-roc/pinproc.h:88: warning: function declaration isn't a prototype

  * src/wpc/core.c (workaround remove -Werrror from CFLAGS for now)
In file included from src/wpc/core.c:11:
src/p-roc/p-roc.h:46: warning: function declaration isn't a prototype
src/p-roc/p-roc.h:48: warning: function declaration isn't a prototype
src/p-roc/p-roc.h:49: warning: function declaration isn't a prototype
src/p-roc/p-roc.h:50: warning: function declaration isn't a prototype

 * src/p-roc/p-roc.cpp (workaround remove -Werrror from CFLAGS for now)
p-roc/include/p-roc/pinproc.h:102: warning: comma at end of enumerator list

 * src/p-roc/p-roc.cpp (workaround remove -Werrror from CFLAGS for now; fix: do not use -pedantic)
In file included from YAML_CPP/include/yaml-cpp/conversion.h:8,
                 from YAML_CPP/include/yaml-cpp/node.h:7,
                 from YAML_CPP/include/yaml-cpp/parser.h:7,
                 from YAML_CPP/include/yaml-cpp/yaml.h:7,
                 from src/p-roc/gameitems.cpp:5:
YAML_CPP/include/yaml-cpp/traits.h:20: warning: ISO C++ 1998 does not support 'long long'
YAML_CPP/include/yaml-cpp/traits.h:21: warning: ISO C++ 1998 does not support 'long long'
