Comments / TODO:
================
* libpinproc issues with MinGW5 / GCC 3.2.3 setup

* P-ROC project:
  should provide MinGW packages of LIBPINPROC and YAML-CPP
  (example at http://ftp.maddes.net/mingw/)

* src/wpc/core.c:
  - Use VPINMAME solution for g_fHandleKeyboard/g_fHandleMechanics generally?
    Values depend on "-proc" switch.
  - SEG16R array, why this difference?

* src/wpc/se.c
  - Create variables for SE_SOLSMOOTH, SE_LAMPSMOOTH, SE_DISPLAYSMOOTH
    Values depend on "-proc" switch.
  + Fixed lamps coding as memcpy/memset were inside "if (coreGlobals.p_rocEn)"

* src/wpc/wpc.c
  - coreGlobals.solenoids?
  - Create variables for SE_SOLSMOOTH, SE_LAMPSMOOTH, SE_DISPLAYSMOOTH
    Values depend on "-proc" switch.
  - Figure out how to handle upper flipper solenoids

* General
  - "P-ROC" not "PROC"
  - add "-proc" switch to generally enable P-ROC support
  - YAML file support ./p-roc folder (configurable via ini file)
  - changed #define's go to a variable (so they can be set differently when "-proc" switch is set)
  - move all of the P-ROC specific functions to p-roc/*[.cpp|.hpp].
    So it should be possible to remove the PRHandle from coreGlobals.
    Then we could get rid of library's pinproc.h in core.h.
    FYI - Looks like it should be safe to remove references to coreGlobals.proc.
    coreGlobals.p_rocEn should be used instead (and is used in most places).  Then
    pinproc.h can be removed from core.h.


Changed files: (svn diff -r3073:BASE [path])
==============
makefile
src\pinmame.mak
src\windows\windows.mak
src\p-roc\p-roc.mak

src\driver.h
src\p-roc\*.cpp
src\p-roc\*.h
src\p-roc\*.hpp
src\windows\config.c
src\wpc\core.c
src\wpc\core.h
src\wpc\dedmd.c
src\wpc\se.c
src\wpc\se.h
src\wpc\wpc.c
src\wpc\wpc.h


Compilation of libraries:
=========================
  - General
    * http://www.pinballcontrollers.com/wiki/Windows_build_instructions
    * Builds will be put into MinGW installation folder, so they are accessible by all projects.
      set MINGW_PATH=<MinGW path>
      Example: set MINGW_PATH=D:\Programme\Coding\MinGW5
  - CMake
    * downloaded cmake-2.8.3-win32-x86.zip
    * extracted to D:\Programme\Coding\cmake\
    * added D:\Programme\Coding\cmake\bin\ to PATH
  - libpinproc source preparation
    * downloaded preble-libpinproc-XXXXXXX.tar.gz from dev branch
      (XXXXXXX=3ffb3b6 -> commit 3ffb3b6f5379bdde5ad35ce547461fb145df8b34; December 05, 2010)
      (XXXXXXX=d90bf71 -> commit d90bf717bac20e07ca76b37c394da5f3fd39a939; December 30, 2010)
    * extracted source to D:\Coding\libpinproc\
    * set LIBPINPROC=<libpinproc>
      Example: set LIBPINPROC=D:\Coding\libpinproc\
  - FTDI's ftd2xx.lib
    * downloaded "CDM20808.zip" from FTDI's D2XX [Direct] Drivers page at http://www.ftdichip.com/Drivers/D2XX.htm
    * extracted i386/ftd2xx.lib to %MINGW_PATH%/lib, and /ftd2xx.h to %MINGW_PATH%/include
      (does not work with static/i386/ftd2xx.lib)
  - YAML-CPP (as of 2010-12-30, version 0.2.5)
    Static library compiles with all MinGW setups: MinGW2/GCC3.2.3, MinGW5/GCC3.2.3, MinGW5/GCC4.5.0
    Dynamic library compiles only with the following MinGW setups: MinGW5/GCC3.2.3, MinGW5/GCC4.5.0
    * downloaded "yaml-cpp-0.2.5.tar.gz"
    * extracted to D:\Coding\yaml-cpp-0.2.5\
    * cd /d D:\Coding\yaml-cpp-0.2.5\
    * CMakeLists.txt:
      - always: change to "SET (LIB_TYPE STATIC)"
      - GCC 3.2.3:
        * remove -Wextra from set(CMAKE_CXX_FLAGS "-O2 -Wall -Wextra -pedantic -Wno-long-long ${CMAKE_CXX_FLAGS}")
        * you will see lots of "warning: #pragma once is obsolete" during build, which can be ignored
      - MinGW2 with LIB_TYPE SHARED:
        * error: libstdc++.a(c++locale.o)(.text+0x38c): undefined reference to `strtold'
    * rmdir /s bin
    * mkdir bin
    * cd bin
    * cmake -G "MinGW Makefiles" ..
    * mingw32-make yaml-cpp (only need to build the library)
       1>yaml-cpp_compile.log 2>&1
    * (make sure MINGW_PATH is set)
      cmake.exe -DCMAKE_INSTALL_PREFIX:PATH=%MINGW_PATH% -P cmake_install.cmake
      copies lib/libyaml-cpp[.dll].a and include/yaml-cpp/*.h
      (Note: install dir can not be changed with "mingw32-make install")
  - libpinproc (as of 2010-12-30, commit d90bf717bac20e07ca76b37c394da5f3fd39a939)
    Static library compiles only with the following MinGW setups: MinGW2/GCC3.2.3, MinGW5/GCC4.5.0
     It does not compile with MinGW5/GCC3.2.3
    * cd /d <libpinproc>
    * rmdir /s bin
    * mkdir bin
    * cd bin
    * cmake -G "MinGW Makefiles" ..
    * mingw32-make pinproc (only need to build the library)
       1>pinproc_compile.log 2>&1
    * (make sure MINGW_PATH is set)
      cmake.exe -DCMAKE_INSTALL_PREFIX:PATH=%MINGW_PATH% -P cmake_install.cmake
      copies lib/libpinproc.a and include/p-roc/pinproc.h
      (Note: install dir can not be changed with "mingw32-make install")

Wish list:
- Some CMake enhancements (adopting from YAML-CPP and CMake wiki pages)


Revision tests for compilation:
===============================
Command: mingw32-make PROC=1
           1>build_pinmamep.log 2>&1

 * MinGW 2 with GCC 3.2.3
   libyaml-cpp 0.2.5 and libpinproc 2010-12-30 compiled with same setup
   > last P-ROC branch revision tested: 3122 = build compiled (Maddes)

 * MinGW 5 with GCC 3.2.3
   libyaml-cpp 0.2.5 compiled with same setup
   a) libpinproc 2010-12-30 compiled with MinGW 2 / GCC 3.2.3 setup
      > last P-ROC branch tested: 3123 = FAILS; doesn't link due to multiple definition of 'vsnprintf'
   b) libpinproc 2010-12-30 compiled with MinGW 5 / GCC 4.5.0 setup
      > last P-ROC branch tested: 3123 = FAILS; doesn't link due to undefined reference to '_Unwind_Resume' and '__gxx_personality_v0'

 * MinGW 5 with GCC 4.5.0
   libyaml-cpp 0.2.5 and libpinproc 2010-12-30 compiled with same setup
   > last P-ROC branch tested: 3123 = build compiled (Maddes)
   > known issues:
     (2010-12-20) no sound with WPC pre-DCS ROMs


Compilation warnings with MinGW5 / GCC 4.5.0:
=============================================
Compiling src/p-roc/gameitems.cpp...
src/p-roc/gameitems.cpp: In member function 'void CoilDriver::RequestDrive(int)':
src/p-roc/gameitems.cpp:414:80: error: operation on '((CoilDriver*)this)->CoilDriver::numPatterOff' may be undefined
src/p-roc/gameitems.cpp:422:76: error: operation on '((CoilDriver*)this)->CoilDriver::numPatterOn' may be undefined


Compilation warnings with MinGW2 / GCC 3.2.3:
=============================================
./.
